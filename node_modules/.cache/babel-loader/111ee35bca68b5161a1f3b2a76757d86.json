{"ast":null,"code":"import { DatePipe } from \"@angular/common\";\nimport { Pipe } from \"@angular/core\";\nimport { LOCALE_ID, Inject } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class LocalizedDatePipe {\n  constructor(locale) {\n    this.locale = locale;\n  }\n\n  transform(value, pattern = \"mediumDate\") {\n    const datePipe = new DatePipe(this.locale); // For now, the translation will be manual, further on, the i18n service will be injected to provide such capability...\n\n    return datePipe.transform(value, pattern) || (this.locale === \"en\" ? \"Currently\" : \"Atualmente\");\n  }\n\n}\n\nLocalizedDatePipe.ɵfac = function LocalizedDatePipe_Factory(t) {\n  return new (t || LocalizedDatePipe)(i0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nLocalizedDatePipe.ɵpipe = i0.ɵɵdefinePipe({\n  name: \"localizedDate\",\n  type: LocalizedDatePipe,\n  pure: false\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(LocalizedDatePipe, [{\n    type: Pipe,\n    args: [{\n      name: \"localizedDate\",\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();","map":{"version":3,"sources":["C:\\Users\\hacke\\git\\live-resume\\src\\app\\core\\pipe\\localized-date.pipe.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,iBAAzB;AACA,SAAS,IAAT,QAAoC,eAApC;AACA,SAAS,SAAT,EAAoB,MAApB,QAAkC,eAAlC;;AAMA,OAAM,MAAO,iBAAP,CAAwB;AAE5B,EAAA,WAAA,CAAsC,MAAtC,EAAoD;AAAd,SAAA,MAAA,GAAA,MAAA;AAAkB;;AAExD,EAAA,SAAS,CAAC,KAAD,EAAa,OAAA,GAAkB,YAA/B,EAA2C;AAClD,UAAM,QAAQ,GAAa,IAAI,QAAJ,CAAa,KAAK,MAAlB,CAA3B,CADkD,CAElD;;AACA,WAAO,QAAQ,CAAC,SAAT,CAAmB,KAAnB,EAA0B,OAA1B,MAAuC,KAAK,MAAL,KAAgB,IAAhB,GAAuB,WAAvB,GAAqC,YAA5E,CAAP;AACD;;AAR2B;;;mBAAjB,iB,EAAiB,EAAA,CAAA,iBAAA,CAER,SAFQ,C;AAEC,C;;;;QAFlB,iB;AAAiB,EAAA,IAAA,EAAA;;;;;uBAAjB,iB,EAAiB,CAAA;UAJ7B,IAI6B;WAJxB;AACJ,MAAA,IAAI,EAAE,eADF;AAEJ,MAAA,IAAI,EAAE;AAFF,K;AAIwB,GAAA,C;;;;cAEf,M;eAAO,S","sourcesContent":["import { DatePipe } from \"@angular/common\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { LOCALE_ID, Inject } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"localizedDate\",\r\n  pure: false\r\n})\r\nexport class LocalizedDatePipe implements PipeTransform {\r\n\r\n  constructor(@Inject(LOCALE_ID) public locale: string) {}\r\n\r\n  transform(value: any, pattern: string = \"mediumDate\"): any {\r\n    const datePipe: DatePipe = new DatePipe(this.locale);\r\n    // For now, the translation will be manual, further on, the i18n service will be injected to provide such capability...\r\n    return datePipe.transform(value, pattern) || (this.locale === \"en\" ? \"Currently\" : \"Atualmente\");\r\n  }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}