{"ast":null,"code":"import { Directive, Input, Inject, LOCALE_ID } from \"@angular/core\";\nimport { Typed } from \"./typed\";\nimport * as i0 from \"@angular/core\";\nexport class TypingAnimationDirective {\n  constructor(elRef, locale) {\n    this.elRef = elRef;\n    this.locale = locale;\n    this.phrases = [];\n\n    this._flatMap = (f, xs) => xs.reduce((acc, x) => acc.concat(f(x)), []);\n  }\n\n  ngOnInit() {\n    const nestedArr = this.data.filter(el => el.language === (this.locale || \"en\"));\n    this.phrases = this._flatMap(el => el.phrases, nestedArr);\n\n    if (this.checkContent()) {\n      this.createTyped();\n    }\n  }\n\n  checkContent() {\n    return this.phrases.length > 0;\n  }\n\n  createTyped() {\n    this.typed = new Typed(this.elRef.nativeElement, {\n      typeSpeed: this.typeSpeed,\n      startDelay: this.startDelay,\n      phrasePeriod: this.phrasePeriod\n    }, this.phrases);\n    this.typed.begin();\n  }\n\n}\n\nTypingAnimationDirective.ɵfac = function TypingAnimationDirective_Factory(t) {\n  return new (t || TypingAnimationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nTypingAnimationDirective.ɵdir = i0.ɵɵdefineDirective({\n  type: TypingAnimationDirective,\n  selectors: [[\"\", \"typingAnimation\", \"\"]],\n  inputs: {\n    phrasePeriod: \"phrasePeriod\",\n    typeSpeed: \"typeSpeed\",\n    startDelay: \"startDelay\",\n    data: \"data\"\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(TypingAnimationDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[typingAnimation]\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, {\n    phrasePeriod: [{\n      type: Input,\n      args: [\"phrasePeriod\"]\n    }],\n    typeSpeed: [{\n      type: Input,\n      args: [\"typeSpeed\"]\n    }],\n    startDelay: [{\n      type: Input,\n      args: [\"startDelay\"]\n    }],\n    data: [{\n      type: Input,\n      args: [\"data\"]\n    }]\n  });\n})();","map":{"version":3,"sources":["C:\\Users\\hacke\\OneDrive\\Documents\\GitHub\\salilagrawal\\src\\app\\welcome\\welcome-dialog\\welcome-dialog-typing\\typing-animation.directive.ts"],"names":[],"mappings":"AAAA,SACI,SADJ,EAEgB,KAFhB,EAEuB,MAFvB,EAE+B,SAF/B,QAGO,eAHP;AAIA,SAAS,KAAT,QAAsB,SAAtB;;AAWA,OAAM,MAAO,wBAAP,CAA+B;AAUjC,EAAA,WAAA,CACY,KADZ,EAE8B,MAF9B,EAE4C;AADhC,SAAA,KAAA,GAAA,KAAA;AACkB,SAAA,MAAA,GAAA,MAAA;AAJ9B,SAAA,OAAA,GAAoB,EAApB;;AAOA,SAAA,QAAA,GAAW,CAAC,CAAD,EAAI,EAAJ,KAAW,EAAE,CAAC,MAAH,CAAU,CAAC,GAAD,EAAK,CAAL,KAAW,GAAG,CAAC,MAAJ,CAAW,CAAC,CAAC,CAAD,CAAZ,CAArB,EAAuC,EAAvC,CAAtB;AAFI;;AAIJ,EAAA,QAAQ,GAAA;AAEJ,UAAM,SAAS,GAAc,KAAK,IAAL,CAAU,MAAV,CAAiB,EAAE,IAAI,EAAE,CAAC,QAAH,MAAiB,KAAK,MAAL,IAAe,IAAhC,CAAvB,CAA7B;AACA,SAAK,OAAL,GAAe,KAAK,QAAL,CAAc,EAAE,IAAI,EAAE,CAAC,OAAvB,EAAgC,SAAhC,CAAf;;AAEA,QAAG,KAAK,YAAL,EAAH,EAAwB;AACpB,WAAK,WAAL;AACH;AACJ;;AAEO,EAAA,YAAY,GAAA;AAChB,WAAO,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA7B;AACH;;AAEO,EAAA,WAAW,GAAA;AAChB,SAAK,KAAL,GAAa,IAAI,KAAJ,CACR,KAAK,KAAL,CAAW,aADH,EAER;AACI,MAAA,SAAS,EAAE,KAAK,SADpB;AAEI,MAAA,UAAU,EAAE,KAAK,UAFrB;AAGI,MAAA,YAAY,EAAE,KAAK;AAHvB,KAFQ,EAOR,KAAK,OAPG,CAAb;AAUC,SAAK,KAAL,CAAW,KAAX;AACH;;AA3CgC;;;mBAAxB,wB,EAAwB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,C,EAAA,EAAA,CAAA,iBAAA,CAYrB,SAZqB,C;AAYZ,C;;;QAZZ,wB;AAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,C;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,YAAA,EAAA,cAAA;AAAA,IAAA,SAAA,EAAA,WAAA;AAAA,IAAA,UAAA,EAAA,YAAA;AAAA,IAAA,IAAA,EAAA;AAAA;;;;;uBAAxB,wB,EAAwB,CAAA;UAJpC,SAIoC;WAJ1B;AACP,MAAA,QAAQ,EAAE;AADH,K;AAI0B,GAAA,C;;;;;;cAY5B,M;eAAO,S;;;;;YAVX,K;aAAM,c;;;YACN,K;aAAM,W;;;YACN,K;aAAM,Y;;;YACN,K;aAAM,M","sourcesContent":["import {\r\n    Directive, OnInit,\r\n    ElementRef, Input, Inject, LOCALE_ID\r\n} from \"@angular/core\";\r\nimport { Typed } from \"./typed\";\r\n\r\ninterface IPhrase {\r\n    language: string;\r\n    phrases: string[];\r\n}\r\n\r\n@Directive({\r\n    selector: \"[typingAnimation]\"\r\n})\r\n\r\nexport class TypingAnimationDirective implements OnInit {\r\n\r\n    @Input(\"phrasePeriod\") phrasePeriod: number;\r\n    @Input(\"typeSpeed\") typeSpeed: number;\r\n    @Input(\"startDelay\") startDelay: number;\r\n    @Input(\"data\") data: IPhrase[];\r\n    \r\n    typed: Typed;\r\n    phrases: string[] = [];\r\n\r\n    constructor (\r\n        private elRef: ElementRef,\r\n        @Inject(LOCALE_ID) public locale: string\r\n    ) {}\r\n\r\n    _flatMap = (f, xs) => xs.reduce((acc,x) => acc.concat(f(x)), []);\r\n\r\n    ngOnInit () {\r\n        \r\n        const nestedArr: IPhrase[] = this.data.filter(el => el.language === (this.locale || \"en\"));\r\n        this.phrases = this._flatMap(el => el.phrases, nestedArr);\r\n\r\n        if(this.checkContent()) {\r\n            this.createTyped();\r\n        }\r\n    }\r\n\r\n    private checkContent() {\r\n        return this.phrases.length > 0;\r\n    }\r\n\r\n    private createTyped () {\r\n       this.typed = new Typed(\r\n            this.elRef.nativeElement,\r\n            {\r\n                typeSpeed: this.typeSpeed,\r\n                startDelay: this.startDelay,\r\n                phrasePeriod: this.phrasePeriod\r\n            },\r\n            this.phrases\r\n        );\r\n        \r\n        this.typed.begin();\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}